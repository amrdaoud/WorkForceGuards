// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkForceManagementV0.Contexts;

namespace WorkForceManagementV0.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221206122713_Guard_Changes")]
    partial class Guard_Changes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkForceGuards.Models.DailyAttendancePattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayOffs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("StaffMemberId")
                        .HasColumnType("int");

                    b.Property<int>("SublocationId")
                        .HasColumnType("int");

                    b.Property<int>("TransportationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("StaffMemberId");

                    b.HasIndex("SublocationId");

                    b.HasIndex("TransportationId");

                    b.ToTable("DailyAttendancePatterns");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbsence")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBreak")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUndefined")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkTime")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("NeedBackup")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Color")
                        .IsUnique()
                        .HasFilter("[Color] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("Barcode")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AssetTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AssetTerms");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AssetTermValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetTermId")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AssetTermId");

                    b.HasIndex("AssetTypeId");

                    b.ToTable("AssetTermValues");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AttendanceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DefaultActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("DisableEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAbsence")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DefaultActivityId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("AttendanceTypes");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Backup.BkpDailyAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AttendanceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DailyAttendanceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<int>("HeadOfSectionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("StaffMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("TransportationRouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceTypeId");

                    b.ToTable("BkpDailyAttendances");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Backup.BkpScheduleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("DailyAttendanceId")
                        .HasColumnType("int");

                    b.Property<double?>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("DailyAttendanceId");

                    b.HasIndex("IntervalId");

                    b.ToTable("BkpScheduleDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.BreakTypeOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendenceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("StaffMemberId")
                        .HasColumnType("int");

                    b.Property<int>("SublocationId")
                        .HasColumnType("int");

                    b.Property<int?>("TransportationRouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttendenceTypeId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("StaffMemberId");

                    b.HasIndex("SublocationId");

                    b.HasIndex("TransportationRouteId");

                    b.ToTable("breakTypeOptions");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ColorName")
                        .IsUnique()
                        .HasFilter("[ColorName] IS NOT NULL");

                    b.ToTable("colors");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.DailyAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendanceTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaveBackup")
                        .HasColumnType("bit");

                    b.Property<int>("HeadOfSectionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("StaffMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("SublocationId")
                        .HasColumnType("int");

                    b.Property<int?>("TransportationRouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceTypeId");

                    b.HasIndex("HeadOfSectionId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SublocationId");

                    b.HasIndex("TransportationRouteId");

                    b.HasIndex("StaffMemberId", "ScheduleId", "AttendanceTypeId", "TransportationRouteId", "Day")
                        .IsUnique()
                        .HasFilter("[TransportationRouteId] IS NOT NULL");

                    b.ToTable("DailyAttendances");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.DayOffOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("StaffMemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("StaffMemberId");

                    b.ToTable("dayOffOptions");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ForeCasting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntervalId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ForeCastings");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Forecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DurationTolerance")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExceptDates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("OfferedTolerance")
                        .HasColumnType("float");

                    b.Property<double>("ServiceLevel")
                        .HasColumnType("float");

                    b.Property<int>("ServiceTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Forecasts");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ForecastDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayoffWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<int>("ForecastId")
                        .HasColumnType("int");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ForecastId");

                    b.HasIndex("IntervalId");

                    b.ToTable("ForecastDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ForecastHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.Property<int>("Offered")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntervalId");

                    b.ToTable("ForecastHistories");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.HeadOfSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("HeadOfSections");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Interval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoverMap")
                        .HasColumnType("int");

                    b.Property<int>("OrderMap")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeMap")
                        .HasColumnType("time");

                    b.Property<double>("Tolerance")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Intervals");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.IpccAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("LocalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffMemberEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("StaffMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UtcDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IpccAgents");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ForecastId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ScheduleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("BackupStaffId")
                        .HasColumnType("int");

                    b.Property<int>("DailyAttendanceId")
                        .HasColumnType("int");

                    b.Property<double?>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("BackupStaffId");

                    b.HasIndex("DailyAttendanceId");

                    b.HasIndex("IntervalId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleDetail");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int?>("EarlyStartIntervalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LateEndIntervalId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EarlyStartIntervalId");

                    b.HasIndex("LateEndIntervalId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ShiftRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BreakBetween")
                        .HasColumnType("int");

                    b.Property<int>("EndBefore")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StartAfter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("shiftRules");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.StaffMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EstimatedLeaveDays")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HeadOfSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LeaveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransportationRouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("HeadOfSectionId");

                    b.HasIndex("LocationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StaffTypeId");

                    b.HasIndex("TransportationRouteId");

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.StaffType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("StaffTypes");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SubLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("SubLocations");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SwapRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DestinationDailyAttendanceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceDailyAttendanceId")
                        .HasColumnType("int");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationDailyAttendanceId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SourceDailyAttendanceId");

                    b.HasIndex("StatusId");

                    b.ToTable("SwapRequests");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SwapRequestDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvolvedAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeclined")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SwapRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SwapRequestId");

                    b.ToTable("SwapRequestDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SwapRequestStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SwapRequestStatuses");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.TmpForecastDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayoffWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.Property<int>("TmpForecastId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntervalId");

                    b.ToTable("TmpForecastDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.TmpScheduleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("DailyAttendanceId")
                        .HasColumnType("int");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("DailyAttendanceId");

                    b.HasIndex("IntervalId");

                    b.ToTable("TmpScheduleDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.TransportationRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArriveIntervalId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartIntervalId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIgnored")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArriveIntervalId");

                    b.HasIndex("DepartIntervalId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SubLocationId");

                    b.ToTable("TransportationRoutes");
                });

            modelBuilder.Entity("WorkForceGuards.Models.DailyAttendancePattern", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.StaffMember", "StaffMember")
                        .WithMany()
                        .HasForeignKey("StaffMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.SubLocation", "Sublocation")
                        .WithMany()
                        .HasForeignKey("SublocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.TransportationRoute", "Transportation")
                        .WithMany()
                        .HasForeignKey("TransportationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("StaffMember");

                    b.Navigation("Sublocation");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Asset", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AssetTermValue", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.AssetTerm", "AssetTerm")
                        .WithMany("Values")
                        .HasForeignKey("AssetTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetTerm");

                    b.Navigation("AssetType");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AttendanceType", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Activity", "DefaultActivity")
                        .WithMany()
                        .HasForeignKey("DefaultActivityId");

                    b.Navigation("DefaultActivity");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Backup.BkpDailyAttendance", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.AttendanceType", "AttendanceType")
                        .WithMany()
                        .HasForeignKey("AttendanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceType");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Backup.BkpScheduleDetail", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Backup.BkpDailyAttendance", "DailyAttendance")
                        .WithMany("ScheduleDetails")
                        .HasForeignKey("DailyAttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("DailyAttendance");

                    b.Navigation("Interval");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.BreakTypeOption", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.AttendanceType", "AttendanceType")
                        .WithMany("BreakTypeOptions")
                        .HasForeignKey("AttendenceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Schedule", "Schedule")
                        .WithMany("BreakTypeOptions")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.StaffMember", "StaffMember")
                        .WithMany("BreakTypeOption")
                        .HasForeignKey("StaffMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.SubLocation", "Sublocation")
                        .WithMany()
                        .HasForeignKey("SublocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.TransportationRoute", "TransportationRoute")
                        .WithMany()
                        .HasForeignKey("TransportationRouteId");

                    b.Navigation("AttendanceType");

                    b.Navigation("Schedule");

                    b.Navigation("StaffMember");

                    b.Navigation("Sublocation");

                    b.Navigation("TransportationRoute");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.DailyAttendance", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.AttendanceType", "AttendanceType")
                        .WithMany("DailyAttendances")
                        .HasForeignKey("AttendanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.HeadOfSection", "HeadOfSection")
                        .WithMany()
                        .HasForeignKey("HeadOfSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Schedule", "Schedule")
                        .WithMany("DailyAttendances")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.StaffMember", "StaffMember")
                        .WithMany("DailyAttendances")
                        .HasForeignKey("StaffMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.SubLocation", "Sublocation")
                        .WithMany()
                        .HasForeignKey("SublocationId");

                    b.HasOne("WorkForceManagementV0.Models.TransportationRoute", "TransportationRoute")
                        .WithMany()
                        .HasForeignKey("TransportationRouteId");

                    b.Navigation("AttendanceType");

                    b.Navigation("HeadOfSection");

                    b.Navigation("Schedule");

                    b.Navigation("StaffMember");

                    b.Navigation("Sublocation");

                    b.Navigation("TransportationRoute");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.DayOffOption", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Schedule", "Schedule")
                        .WithMany("DayOffOptions")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.StaffMember", "StaffMember")
                        .WithMany("DayOffOptions")
                        .HasForeignKey("StaffMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("StaffMember");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ForeCasting", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Schedule", "Schedule")
                        .WithMany("ForeCastings")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interval");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ForecastDetails", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Forecast", "Forecast")
                        .WithMany("ForecastDetails")
                        .HasForeignKey("ForecastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forecast");

                    b.Navigation("Interval");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ForecastHistory", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interval");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.ScheduleDetail", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.StaffMember", "BackupStaff")
                        .WithMany()
                        .HasForeignKey("BackupStaffId");

                    b.HasOne("WorkForceManagementV0.Models.DailyAttendance", "DailyAttendance")
                        .WithMany("ScheduleDetails")
                        .HasForeignKey("DailyAttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Schedule", "Schedule")
                        .WithMany("ScheduleDetails")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("BackupStaff");

                    b.Navigation("DailyAttendance");

                    b.Navigation("Interval");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Shift", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Interval", "EarlyStartInterval")
                        .WithMany()
                        .HasForeignKey("EarlyStartIntervalId");

                    b.HasOne("WorkForceManagementV0.Models.Interval", "LateEndInterval")
                        .WithMany()
                        .HasForeignKey("LateEndIntervalId");

                    b.Navigation("EarlyStartInterval");

                    b.Navigation("LateEndInterval");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.StaffMember", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.HeadOfSection", "HeadOfSection")
                        .WithMany("StaffMembers")
                        .HasForeignKey("HeadOfSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Location", "Location")
                        .WithMany("StaffMembers")
                        .HasForeignKey("LocationId");

                    b.HasOne("WorkForceManagementV0.Models.StaffType", "StaffType")
                        .WithMany("StaffMembers")
                        .HasForeignKey("StaffTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.TransportationRoute", "TransportationRoute")
                        .WithMany("StaffMembers")
                        .HasForeignKey("TransportationRouteId");

                    b.Navigation("HeadOfSection");

                    b.Navigation("Location");

                    b.Navigation("StaffType");

                    b.Navigation("TransportationRoute");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SubLocation", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Location", "Location")
                        .WithMany("SubLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SwapRequest", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.DailyAttendance", "DestinationDailyAttendance")
                        .WithMany()
                        .HasForeignKey("DestinationDailyAttendanceId");

                    b.HasOne("WorkForceManagementV0.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.HasOne("WorkForceManagementV0.Models.DailyAttendance", "SourceDailyAttendance")
                        .WithMany()
                        .HasForeignKey("SourceDailyAttendanceId");

                    b.HasOne("WorkForceManagementV0.Models.SwapRequestStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("DestinationDailyAttendance");

                    b.Navigation("Schedule");

                    b.Navigation("SourceDailyAttendance");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SwapRequestDetail", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.SwapRequest", "SwapRequest")
                        .WithMany("Details")
                        .HasForeignKey("SwapRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SwapRequest");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.TmpForecastDetails", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interval");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.TmpScheduleDetail", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.DailyAttendance", "DailyAttendance")
                        .WithMany()
                        .HasForeignKey("DailyAttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Interval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("DailyAttendance");

                    b.Navigation("Interval");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.TransportationRoute", b =>
                {
                    b.HasOne("WorkForceManagementV0.Models.Interval", "ArriveInterval")
                        .WithMany()
                        .HasForeignKey("ArriveIntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForceManagementV0.Models.Interval", "DepartInterval")
                        .WithMany()
                        .HasForeignKey("DepartIntervalId");

                    b.HasOne("WorkForceManagementV0.Models.SubLocation", null)
                        .WithMany("TransportationRoutes")
                        .HasForeignKey("SubLocationId");

                    b.Navigation("ArriveInterval");

                    b.Navigation("DepartInterval");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AssetTerm", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AssetType", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.AttendanceType", b =>
                {
                    b.Navigation("BreakTypeOptions");

                    b.Navigation("DailyAttendances");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Backup.BkpDailyAttendance", b =>
                {
                    b.Navigation("ScheduleDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.DailyAttendance", b =>
                {
                    b.Navigation("ScheduleDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Forecast", b =>
                {
                    b.Navigation("ForecastDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.HeadOfSection", b =>
                {
                    b.Navigation("StaffMembers");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Location", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("StaffMembers");

                    b.Navigation("SubLocations");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.Schedule", b =>
                {
                    b.Navigation("BreakTypeOptions");

                    b.Navigation("DailyAttendances");

                    b.Navigation("DayOffOptions");

                    b.Navigation("ForeCastings");

                    b.Navigation("ScheduleDetails");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.StaffMember", b =>
                {
                    b.Navigation("BreakTypeOption");

                    b.Navigation("DailyAttendances");

                    b.Navigation("DayOffOptions");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.StaffType", b =>
                {
                    b.Navigation("StaffMembers");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SubLocation", b =>
                {
                    b.Navigation("TransportationRoutes");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.SwapRequest", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("WorkForceManagementV0.Models.TransportationRoute", b =>
                {
                    b.Navigation("StaffMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
